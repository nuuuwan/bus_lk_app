{"version":3,"sources":["base/LatLngUtils.js","core/Stops.js","core/Routes.js","nonstate/molecules/RouteIDView.js","nonstate/atoms/Distance.js","nonstate/molecules/StopName.js","nonstate/molecules/RouteView.js","nonstate/molecules/RoutesView.js","Styles.js","stateful/molecules/GeoMap.js","nonstate/molecules/StopCircle.js","stateful/pages/HomePage.js","App.js","reportWebVitals.js","index.js"],"names":["LatLngUtils","valueDegrees","Math","PI","latDeg1","lngDeg1","latDeg2","lngDeg2","toRadians","dLat","dLng","lat1","lat2","a","sin","cos","atan2","sqrt","Stops","WWW","json","stopsIndexPy","Object","values","reduce","stopsIndex","stop","stopID","name","globalCode","latLng","getDistanceToOrigin","lat","lng","getDistance","latOrigin","lngOrigin","getStopsIndex","stopsWithDistance","map","distance","sort","b","ROUTE_IDS","Routes","Promise","all","routeID","url","getRouteStopIDs","routeStopIDs","routeIndex","iRoute","searchStops","getRoutesIndex","routeIDSet","Set","routesForStops","searchStop","searchStopID","entries","has","closestStopIndex","findIndex","push","closestStopID","closestStopName","closestStopLatLng","add","stopIDToRouteIDs","RouteIDView","routeNumber","shortFormat","substring","color","parseInt","getColor","Typography","variant","component","sx","DistanceOnly","distanceText","distanceKM","distanceM","round","toFixed","getDistanceText","WalkingTimeOnly","walkingTimeMin","ceil","height","Distance","StopName","stopName","size","prefix","replace","fontSize","RouteView","route","onUpdateLatLng","opacity","nStops","length","lastStopName","ListItemButton","onClick","ListItemIcon","ListItemText","RoutesView","routes","List","STYLE","centerCircle","stroke","fillOpacity","radius","stopCircle","EventComponent","props","useMapEvents","moveend","e","onMoveEnd","GeoMap","this","center","zoom","MapContainer","zoomControl","TileLayer","children","CircleMarker","STYLES","pathOptions","Component","StopCircle","NAVIGATION_PANES","HomePage","state","isDataLoaded","navigationPaneValue","navigator","geolocation","getCurrentPosition","onGetCurrentPosition","bind","getClosestStops","closestStops","getRoutesForStops","getStopIDToRouteIDs","setState","updateMapPosition","position","coords","latitude","longitude","latLngObj","target","getCenter","getZoom","iStop","renderMap","renderRoutes","Box","paddingBottom","elevation","renderInner","Paper","bottom","left","right","BottomNavigation","showLabels","onChange","onChangeBottomNavigation","value","BottomNavigationAction","label","icon","theme","createTheme","typography","fontFamily","join","App","ThemeProvider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6f288555.chunk.js","sourcesContent":["var EARTH_RADIUS_KM = 6371;\n\nexport default class LatLngUtils {\n  static toRadians(valueDegrees) {\n    return (valueDegrees * Math.PI) / 180;\n  }\n\n  static getDistance([latDeg1, lngDeg1], [latDeg2, lngDeg2]) {\n    const [dLat, dLng] = [\n      LatLngUtils.toRadians(latDeg2 - latDeg1),\n      LatLngUtils.toRadians(lngDeg2 - lngDeg1),\n    ];\n    const [lat1, lat2] = [\n      LatLngUtils.toRadians(latDeg1),\n      LatLngUtils.toRadians(latDeg2),\n    ];\n\n    var a =\n      Math.sin(dLat / 2) * Math.sin(dLat / 2) +\n      Math.sin(dLng / 2) * Math.sin(dLng / 2) * Math.cos(lat1) * Math.cos(lat2);\n    var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n    var d = EARTH_RADIUS_KM * c;\n    return d;\n  }\n}\n","import { WWW } from \"@nuuuwan/utils-js-dev\";\nimport LatLngUtils from \"../base/LatLngUtils.js\";\n\nexport default class Stops {\n  static async getStopsIndex() {\n    const url = \"/bus_lk_app/data/stops.json\";\n    const stopsIndexPy = await WWW.json(url);\n    return Object.values(stopsIndexPy).reduce(function (stopsIndex, stop) {\n      const stopID = stop[\"stop_id\"];\n      const name = stop[\"name\"];\n      const globalCode = stop[\"global_code\"];\n      const latLng = stop[\"lat_lng\"];\n      stopsIndex[stopID] = { stopID, name, globalCode, latLng };\n      return stopsIndex;\n    }, {});\n  }\n\n  static async getClosestStops([latOrigin, lngOrigin]) {\n    const stopsIndex = await Stops.getStopsIndex();\n\n    function getDistanceToOrigin([lat, lng]) {\n      return LatLngUtils.getDistance([latOrigin, lngOrigin], [lat, lng]);\n    }\n\n    const stopsWithDistance = Object.values(stopsIndex).map(function (stop) {\n      stop.distance = getDistanceToOrigin(stop.latLng);\n      return stop;\n    });\n\n    return stopsWithDistance.sort(function (a, b) {\n      return a.distance - b.distance;\n    });\n  }\n}\n","import { WWW } from \"@nuuuwan/utils-js-dev\";\n\nconst ROUTE_IDS = [\n  \"100-S\",\n  \"103-S\",\n  \"120-S\",\n  \"125-S\",\n  \"135-S\",\n  \"138-S\",\n  \"140-S\",\n  \"154-S\",\n  \"155-S\",\n  \"163-S\",\n  \"166-S\",\n  \"168-S\",\n  \"176-S\",\n  \"177-W\",\n  \"193-S\",\n];\n\nexport default class Routes {\n  static async getRouteStopIDs() {\n    return await Promise.all(\n      ROUTE_IDS.map(async function (routeID) {\n        const url = `/bus_lk_app/data/routes/${routeID}.json`;\n        return await WWW.json(url);\n      })\n    );\n  }\n\n  static async getRoutesIndex() {\n    const routeStopIDs = await Routes.getRouteStopIDs();\n    return ROUTE_IDS.reduce(function (routeIndex, routeID, iRoute) {\n      routeIndex[routeID] = routeStopIDs[iRoute];\n      return routeIndex;\n    }, {});\n  }\n\n  static async getRoutesForStops(searchStops) {\n    const routeIndex = await Routes.getRoutesIndex();\n    var routeIDSet = new Set();\n    return searchStops.reduce(function (routesForStops, searchStop) {\n      const searchStopID = searchStop.stopID;\n      for (var [routeID, routeStopIDs] of Object.entries(routeIndex)) {\n        if (routeIDSet.has(routeID)) {\n          continue;\n        }\n        const closestStopIndex = routeStopIDs.findIndex(\n          (stopID) => stopID === searchStopID\n        );\n        if (closestStopIndex !== -1) {\n          routesForStops.push({\n            routeID,\n            routeStopIDs,\n            closestStopIndex,\n            closestStopID: searchStopID,\n            closestStopName: searchStop.name,\n            closestStopLatLng: searchStop.latLng,\n            distance: searchStop.distance,\n          });\n          routeIDSet.add(routeID);\n        }\n      }\n      return routesForStops;\n    }, []);\n  }\n\n  static async getStopIDToRouteIDs(stopID) {\n    const routeIndex = await Routes.getRoutesIndex();\n    return Object.entries(routeIndex).reduce(function (\n      stopIDToRouteIDs,\n      [routeID, routeStopIDs]\n    ) {\n      return routeStopIDs.reduce(function (stopIDToRouteIDs, stopID) {\n        if (!stopIDToRouteIDs[stopID]) {\n          stopIDToRouteIDs[stopID] = [];\n        }\n        stopIDToRouteIDs[stopID].push(routeID);\n        return stopIDToRouteIDs;\n      }, stopIDToRouteIDs);\n    },\n    {});\n  }\n}\n","import Typography from \"@mui/material/Typography\";\n\nfunction getColor(routeNumber) {\n  const routeNumberPrefix = parseInt(routeNumber.substring(0, 2));\n  switch (routeNumberPrefix) {\n    case 12:\n      return \"red\";\n    case 13:\n      return \"orange\";\n    case 14:\n      return \"blue\";\n    case 15:\n      return \"brown\";\n    case 16:\n      return \"purple\";\n    case 17:\n      return \"green\";\n    default:\n      return \"gray\";\n  }\n}\n\nexport default function RouteIDView({ routeID, shortFormat }) {\n  const routeNumber = routeID.substring(0, 3);\n  const color = getColor(routeNumber);\n\n  return (\n    <>\n      <Typography variant=\"h6\" component=\"span\" sx={{ color }}>\n        {routeNumber}\n      </Typography>\n    </>\n  );\n}\n","import Typography from \"@mui/material/Typography\";\nimport DirectionsWalkIcon from \"@mui/icons-material/DirectionsWalk\";\n\nconst WALKING_SPEED_KMPH = 4.5;\nconst MIN_IN_HOUR = 60;\n\nfunction getDistanceText(distanceKM) {\n  if (distanceKM < 1) {\n    const distanceM = Math.round(distanceKM * 1_00, 0) * 10;\n    return `${distanceM.toFixed(0)} m`;\n  } else if (distanceKM < 10) {\n    return `${distanceKM.toFixed(1)} km`;\n  }\n  return `${distanceKM.toFixed(0)} km`;\n}\n\nfunction DistanceOnly({ distanceKM }) {\n  const distanceText = getDistanceText(distanceKM);\n  return (\n    <Typography variant=\"subtitle2\" component=\"span\" sx={{ color: \"gray\" }}>\n      {distanceText}\n    </Typography>\n  );\n}\n\nfunction WalkingTimeOnly({ distanceKM }) {\n  const walkingTimeMin = Math.ceil(\n    (distanceKM * MIN_IN_HOUR) / WALKING_SPEED_KMPH\n  );\n  return (\n    <Typography variant=\"subtitle2\" component=\"span\">\n      {walkingTimeMin} min\n      <DirectionsWalkIcon sx={{ height: 14 }} />\n    </Typography>\n  );\n}\n\nexport default function Distance({ distanceKM }) {\n  return (\n    <>\n      <DistanceOnly distanceKM={distanceKM} />\n      {\" · \"}\n      <WalkingTimeOnly distanceKM={distanceKM} />\n    </>\n  );\n}\n","import Typography from \"@mui/material/Typography\";\nimport DirectionsBusIcon from \"@mui/icons-material/DirectionsBus\";\n\nexport default function StopName({ stopName, size, prefix }) {\n  stopName = stopName.replace(\" Bus Stop\", \"\");\n  stopName = stopName.replace(\" Bus Station\", \"\");\n\n  return (\n    <Typography component=\"div\" sx={{ fontSize: size }}>\n      {prefix}\n      <DirectionsBusIcon sx={{ height: size }} />\n      {stopName}\n    </Typography>\n  );\n}\n","import * as React from \"react\";\nimport ListItemButton from \"@mui/material/ListItemButton\";\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport MultipleStopIcon from \"@mui/icons-material/MultipleStop\";\n\nimport RouteIDView from \"../molecules/RouteIDView.js\";\nimport Distance from \"../atoms/Distance.js\";\nimport StopName from \"../molecules/StopName.js\";\n\nconst MAX_WALKING_DISTAICE = 1.1;\n\nexport default function RouteView({ route, stopsIndex, onUpdateLatLng }) {\n  const onClick = function () {\n    onUpdateLatLng(route.closestStopLatLng);\n  };\n\n  const opacity = route.distance <= MAX_WALKING_DISTAICE ? 1 : 0.3;\n\n  const nStops = route.routeStopIDs.length;\n  const lastStopID = route.routeStopIDs[nStops - 1];\n  const lastStopName = stopsIndex[lastStopID].name;\n\n  return (\n    <ListItemButton onClick={onClick} sx={{ opacity }}>\n      <ListItemIcon>\n        <MultipleStopIcon />\n      </ListItemIcon>\n      <ListItemText>\n        <RouteIDView routeID={route.routeID} />\n        <StopName stopName={lastStopName} size={20} prefix=\"\" />\n        <StopName stopName={route.closestStopName} size={12} prefix=\"from\" />\n\n        <Distance distanceKM={route.distance} />\n      </ListItemText>\n    </ListItemButton>\n  );\n}\n","import * as React from \"react\";\nimport List from \"@mui/material/List\";\nimport RouteView from \"../molecules/RouteView.js\";\n\nexport default function RoutesView({ routes, stopsIndex, onUpdateLatLng }) {\n  return (\n    <List>\n      {routes.map(function (route, iRoute) {\n        return (\n          <RouteView\n            key={`route-${iRoute}`}\n            route={route}\n            stopsIndex={stopsIndex}\n            onUpdateLatLng={onUpdateLatLng}\n          />\n        );\n      })}\n    </List>\n  );\n}\n","const STYLE = {\n  centerCircle: { color: \"red\", stroke: null, fillOpacity: 0.25, radius: 100 },\n  stopCircle: { color: \"black\", fillOpacity: 0.5, stroke: null, radius: 10 },\n};\n\nexport default STYLE;\n","import { Component } from \"react\";\nimport {\n  MapContainer,\n  TileLayer,\n  CircleMarker,\n  useMapEvents,\n} from \"react-leaflet\";\nimport STYLES from \"../../Styles.js\";\nimport \"./GeoMap.css\";\n\nconst URL_FORMAT = \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\";\n\nfunction EventComponent(props) {\n  useMapEvents({\n    moveend: (e) => {\n      props.onMoveEnd(e);\n    },\n  });\n  return null;\n}\n\nexport default class GeoMap extends Component {\n  render() {\n    const { center, zoom, onMoveEnd } = this.props;\n    return (\n      <MapContainer center={center} zoom={zoom} zoomControl={false}>\n        <TileLayer url={URL_FORMAT} />\n        <EventComponent onMoveEnd={onMoveEnd} />\n\n        {this.props.children}\n        <CircleMarker\n          center={center}\n          radius={STYLES.centerCircle.radius}\n          pathOptions={STYLES.centerCircle}\n        />\n      </MapContainer>\n    );\n  }\n}\n","import { CircleMarker } from \"react-leaflet\";\nimport STYLES from \"../../Styles.js\";\n\nexport default function StopCircle({ stop }) {\n  return (\n    <CircleMarker\n      center={stop.latLng}\n      radius={STYLES.stopCircle.radius}\n      pathOptions={STYLES.stopCircle}\n    />\n  );\n}\n","import { Component } from \"react\";\n\nimport Box from \"@mui/material/Box\";\nimport BottomNavigation from \"@mui/material/BottomNavigation\";\nimport BottomNavigationAction from \"@mui/material/BottomNavigationAction\";\nimport LocationOnIcon from \"@mui/icons-material/LocationOn\";\nimport MultipleStopIcon from \"@mui/icons-material/MultipleStop\";\nimport Paper from \"@mui/material/Paper\";\n\nimport Stops from \"../../core/Stops.js\";\nimport Routes from \"../../core/Routes.js\";\nimport RoutesView from \"../../nonstate/molecules/RoutesView.js\";\nimport GeoMap from \"../molecules/GeoMap.js\";\nimport StopCircle from \"../../nonstate/molecules/StopCircle.js\";\n\nconst DEFAULT_ZOOM = 18;\nconst NAVIGATION_PANES = {\n  MAP: 0,\n  ROUTES: 1,\n};\n\n// function getRandomGeoLocation() {\n//   function getRandomQ() {\n//     return Math.random() * 2 - 1;\n//   }\n//\n//   const [lat0, lng0] = [6.896756840487376, 79.87675917795639];\n//   const [dLat, dLng] = [getRandomQ() * 0.06, getRandomQ() * 0.01];\n//   return [lat0 + dLat, lng0 + dLng];\n// }\n\nexport default class HomePage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isDataLoaded: false,\n      navigationPaneValue: NAVIGATION_PANES.MAP,\n    };\n  }\n\n  async componentDidMount() {\n    navigator.geolocation.getCurrentPosition(\n      this.onGetCurrentPosition.bind(this)\n    );\n  }\n\n  async updateMapPosition(latLng, zoom) {\n    const closestStops = await Stops.getClosestStops(latLng);\n    const stopsIndex = await Stops.getStopsIndex();\n    const routesForStops = await Routes.getRoutesForStops(closestStops);\n    const stopIDToRouteIDs = await Routes.getStopIDToRouteIDs();\n\n    this.setState({\n      zoom,\n      latLng,\n      closestStops,\n      stopsIndex,\n      routesForStops,\n      stopIDToRouteIDs,\n      isDataLoaded: true,\n      navigationPaneValue: NAVIGATION_PANES.MAP,\n    });\n  }\n\n  async onUpdateLatLng(latLng) {\n    await this.updateMapPosition(latLng, DEFAULT_ZOOM);\n  }\n\n  async onGetCurrentPosition(position) {\n    const latLng = [position.coords.latitude, position.coords.longitude];\n    const zoom = DEFAULT_ZOOM;\n    await this.updateMapPosition(latLng, zoom);\n  }\n\n  async onMoveEnd(e) {\n    const latLngObj = e.target.getCenter();\n    const latLng = [latLngObj.lat, latLngObj.lng];\n    const zoom = e.target.getZoom();\n    await this.updateMapPosition(latLng, zoom);\n  }\n\n  onChangeBottomNavigation(e, navigationPaneValue) {\n    this.setState({ navigationPaneValue });\n  }\n\n  renderMap() {\n    const { latLng, closestStops } = this.state;\n    const [lat, lng] = latLng;\n    return (\n      <GeoMap\n        center={[lat, lng]}\n        zoom={DEFAULT_ZOOM}\n        onMoveEnd={this.onMoveEnd.bind(this)}\n      >\n        {closestStops.map(function (stop, iStop) {\n          return <StopCircle key={`stop-circle-${iStop}`} stop={stop} />;\n        })}\n      </GeoMap>\n    );\n  }\n\n  renderRoutes() {\n    const { routesForStops, stopsIndex } = this.state;\n    return (\n      <RoutesView\n        routes={routesForStops}\n        stopsIndex={stopsIndex}\n        onUpdateLatLng={this.onUpdateLatLng.bind(this)}\n      />\n    );\n  }\n\n  renderInner() {\n    const { navigationPaneValue } = this.state;\n\n    switch (navigationPaneValue) {\n      case NAVIGATION_PANES.MAP:\n        return this.renderMap();\n      case NAVIGATION_PANES.ROUTES:\n        return this.renderRoutes();\n      default:\n        return null;\n    }\n  }\n\n  render() {\n    const { isDataLoaded, navigationPaneValue } = this.state;\n    if (!isDataLoaded) {\n      return \"Loading...\";\n    }\n\n    return (\n      <Box>\n        <Box sx={{ paddingBottom: 10 }} elevation={2}>\n          {this.renderInner()}\n        </Box>\n        <Paper\n          sx={{ position: \"fixed\", bottom: 0, left: 0, right: 0, height: 60 }}\n          elevation={1}\n        >\n          <BottomNavigation\n            showLabels\n            onChange={this.onChangeBottomNavigation.bind(this)}\n            value={navigationPaneValue}\n          >\n            <BottomNavigationAction label=\"Map\" icon={<LocationOnIcon />} />\n            <BottomNavigationAction\n              label=\"Routes\"\n              icon={<MultipleStopIcon />}\n            />\n          </BottomNavigation>\n        </Paper>\n      </Box>\n    );\n  }\n}\n","import \"./App.css\";\n\nimport HomePage from \"./stateful/pages/HomePage.js\";\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\nimport \"./App.css\";\n\nconst theme = createTheme({\n  typography: {\n    fontFamily: [\"Lato\", \"sans-serif\"].join(\",\"),\n  },\n});\n\nfunction App() {\n  return (\n    <ThemeProvider theme={theme}>\n      <HomePage />\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}