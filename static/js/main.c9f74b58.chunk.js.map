{"version":3,"sources":["base/LatLngUtils.js","core/Stops.js","nonstate/molecules/ClosestStopsView.js","stateful/pages/HomePage.js","App.js","reportWebVitals.js","index.js"],"names":["LatLngUtils","valueDegrees","Math","PI","latDeg1","lngDeg1","latDeg2","lngDeg2","toRadians","dLat","dLng","lat1","lat2","a","sin","cos","atan2","sqrt","Stops","WWW","json","stopsIndex","getDistanceToOrigin","lat","lng","getDistance","latOrigin","lngOrigin","getStopsIndex","stopsWithDistance","Object","values","map","stop","distance","sort","b","Distance","distanceKM","distanceM","toFixed","ClosestStopsView","closestStops","slice","iStop","name","HomePage","props","state","latLng","undefined","isDataLoaded","position","coords","latitude","longitude","getClosestStops","this","setState","navigator","geolocation","getCurrentPosition","onGetCurrentPosition","bind","x","latDisplay","lngDisplay","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c9f74b58.chunk.js","sourcesContent":["var EARTH_RADIUS_KM = 6371;\n\nexport default class LatLngUtils {\n  static toRadians(valueDegrees) {\n    return (valueDegrees * Math.PI) / 180;\n  }\n\n  static getDistance([latDeg1, lngDeg1], [latDeg2, lngDeg2]) {\n    const [dLat, dLng] = [\n      LatLngUtils.toRadians(latDeg2 - latDeg1),\n      LatLngUtils.toRadians(lngDeg2 - lngDeg1),\n    ];\n    const [lat1, lat2] = [\n      LatLngUtils.toRadians(latDeg1),\n      LatLngUtils.toRadians(latDeg2),\n    ];\n\n    var a =\n      Math.sin(dLat / 2) * Math.sin(dLat / 2) +\n      Math.sin(dLng / 2) * Math.sin(dLng / 2) * Math.cos(lat1) * Math.cos(lat2);\n    var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n    var d = EARTH_RADIUS_KM * c;\n    return d;\n  }\n}\n","import { WWW } from \"@nuuuwan/utils-js-dev\";\nimport LatLngUtils from \"../base/LatLngUtils.js\";\n\nexport default class Stops {\n  static async getStopsIndex() {\n    const url = \"/bus_lk_app/data/stops.json\";\n    const stopsIndex = await WWW.json(url);\n    return stopsIndex;\n  }\n\n  static async getClosestStops([latOrigin, lngOrigin]) {\n    const stopsIndex = await Stops.getStopsIndex();\n\n    function getDistanceToOrigin([lat, lng]) {\n      return LatLngUtils.getDistance([latOrigin, lngOrigin], [lat, lng]);\n    }\n\n    const stopsWithDistance = Object.values(stopsIndex).map(function (stop) {\n      stop.distance = getDistanceToOrigin(stop[\"lat_lng\"]);\n      return stop;\n    });\n\n    return stopsWithDistance.sort(function (a, b) {\n      return a.distance - b.distance;\n    });\n  }\n}\n","const MAX_CLOSEST_STOPS = 10;\n\nfunction Distance({ distanceKM }) {\n  if (distanceKM < 1) {\n    const distanceM = distanceKM * 1_000;\n    return <span>{distanceM.toFixed(0)}m</span>;\n  } else if (distanceKM < 10) {\n    return <span>{distanceKM.toFixed(1)}km</span>;\n  }\n  return <span>{distanceKM.toFixed(0)}km</span>;\n}\n\nexport default function ClosestStopsView({ closestStops }) {\n  return (\n    <ul>\n      {closestStops.slice(0, MAX_CLOSEST_STOPS).map(function (stop, iStop) {\n        return (\n          <li key={`stop-${iStop}`}>\n            {stop.name} (<Distance distanceKM={stop.distance} />)\n          </li>\n        );\n      })}\n    </ul>\n  );\n}\n","import { Component } from \"react\";\nimport Stops from \"../../core/Stops.js\";\nimport ClosestStopsView from \"../../nonstate/molecules/ClosestStopsView.js\";\n\nexport default class HomePage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      latLng: undefined,\n      closestStops: undefined,\n      isDataLoaded: false,\n    };\n  }\n\n  async onGetCurrentPosition(position) {\n    const latLng = [position.coords.latitude, position.coords.longitude];\n\n    const closestStops = await Stops.getClosestStops(latLng);\n\n    this.setState({ latLng, closestStops, isDataLoaded: true });\n  }\n\n  async componentDidMount() {\n    navigator.geolocation.getCurrentPosition(\n      this.onGetCurrentPosition.bind(this)\n    );\n  }\n\n  render() {\n    const { latLng, closestStops, isDataLoaded } = this.state;\n    if (!isDataLoaded) {\n      return \"Loading...\";\n    }\n    const [lat, lng] = latLng;\n    const [latDisplay, lngDisplay] = [lat, lng].map((x) => x.toFixed(6));\n    return (\n      <div>\n        <h1>Bus App</h1>\n        <div>\n          Location: ({latDisplay}N, {lngDisplay}E)\n        </div>\n        <ClosestStopsView closestStops={closestStops} />\n      </div>\n    );\n  }\n}\n","import \"./App.css\";\n\nimport HomePage from \"./stateful/pages/HomePage.js\";\n\nfunction App() {\n  return <HomePage />;\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}