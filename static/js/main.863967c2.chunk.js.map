{"version":3,"sources":["base/LatLngUtils.js","core/Stops.js","core/Routes.js","nonstate/atoms/Distance.js","nonstate/molecules/ClosestStopsView.js","nonstate/atoms/RouteView.js","nonstate/molecules/RoutesView.js","Styles.js","stateful/molecules/GeoMap.js","nonstate/molecules/StopCircle.js","stateful/pages/HomePage.js","App.js","reportWebVitals.js","index.js"],"names":["LatLngUtils","valueDegrees","Math","PI","latDeg1","lngDeg1","latDeg2","lngDeg2","toRadians","dLat","dLng","lat1","lat2","a","sin","cos","atan2","sqrt","Stops","WWW","json","stopsIndex","getDistanceToOrigin","lat","lng","getDistance","latOrigin","lngOrigin","getStopsIndex","stopsWithDistance","Object","values","map","stop","distance","sort","b","ROUTE_IDS","Routes","Promise","all","routeID","url","getRouteStopIDs","routeStopIDs","reduce","routeIndex","iRoute","searchStops","getRoutesIndex","routeIDSet","Set","routesForStops","searchStop","searchStopID","stop_id","entries","has","includes","push","stopID","stopName","name","add","Distance","distanceKM","distanceM","round","toFixed","ClosestStopsView","closestStops","iStop","Route","route","routeNumber","substring","formattedDirection","routeDirection","formatDirection","color","parseInt","getColor","Typography","variant","component","sx","RoutesViewItem","ListItemButton","ListItemIcon","ListItemText","RoutesView","routes","List","STYLE","centerCircle","stroke","fillOpacity","radius","stopCircle","GeoMap","this","props","center","zoom","MapContainer","zoomControl","TileLayer","children","CircleMarker","STYLES","pathOptions","Component","StopCircle","lat_lng","NAVIGATION_PANES","HomePage","state","latLng","undefined","isDataLoaded","navigationPaneValue","navigator","geolocation","getCurrentPosition","onGetCurrentPosition","bind","position","coords","latitude","longitude","getClosestStops","closestStopsDisplay","slice","getRoutesForStops","setState","e","className","renderMap","renderRoutes","renderStops","Box","renderInner","Paper","bottom","left","right","elevation","BottomNavigation","showLabels","onChange","onChangeBottomNavigation","value","BottomNavigationAction","label","icon","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.863967c2.chunk.js","sourcesContent":["var EARTH_RADIUS_KM = 6371;\n\nexport default class LatLngUtils {\n  static toRadians(valueDegrees) {\n    return (valueDegrees * Math.PI) / 180;\n  }\n\n  static getDistance([latDeg1, lngDeg1], [latDeg2, lngDeg2]) {\n    const [dLat, dLng] = [\n      LatLngUtils.toRadians(latDeg2 - latDeg1),\n      LatLngUtils.toRadians(lngDeg2 - lngDeg1),\n    ];\n    const [lat1, lat2] = [\n      LatLngUtils.toRadians(latDeg1),\n      LatLngUtils.toRadians(latDeg2),\n    ];\n\n    var a =\n      Math.sin(dLat / 2) * Math.sin(dLat / 2) +\n      Math.sin(dLng / 2) * Math.sin(dLng / 2) * Math.cos(lat1) * Math.cos(lat2);\n    var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n    var d = EARTH_RADIUS_KM * c;\n    return d;\n  }\n}\n","import { WWW } from \"@nuuuwan/utils-js-dev\";\nimport LatLngUtils from \"../base/LatLngUtils.js\";\n\nexport default class Stops {\n  static async getStopsIndex() {\n    const url = \"/bus_lk_app/data/stops.json\";\n    const stopsIndex = await WWW.json(url);\n    return stopsIndex;\n  }\n\n  static async getClosestStops([latOrigin, lngOrigin]) {\n    const stopsIndex = await Stops.getStopsIndex();\n\n    function getDistanceToOrigin([lat, lng]) {\n      return LatLngUtils.getDistance([latOrigin, lngOrigin], [lat, lng]);\n    }\n\n    const stopsWithDistance = Object.values(stopsIndex).map(function (stop) {\n      stop.distance = getDistanceToOrigin(stop[\"lat_lng\"]);\n      return stop;\n    });\n\n    return stopsWithDistance.sort(function (a, b) {\n      return a.distance - b.distance;\n    });\n  }\n}\n","import { WWW } from \"@nuuuwan/utils-js-dev\";\n\nconst ROUTE_IDS = [\n  \"100-S\",\n  \"103-S\",\n  \"120-S\",\n  \"125-S\",\n  \"135-S\",\n  \"138-S\",\n  \"140-S\",\n  \"154-S\",\n  \"155-S\",\n  \"163-S\",\n  \"166-S\",\n  \"168-S\",\n  \"176-S\",\n  \"177-W\",\n  \"193-S\",\n];\n\nexport default class Routes {\n  static async getRouteStopIDs() {\n    return await Promise.all(\n      ROUTE_IDS.map(async function (routeID) {\n        const url = `/bus_lk_app/data/routes/${routeID}.json`;\n        return await WWW.json(url);\n      })\n    );\n  }\n\n  static async getRoutesIndex() {\n    const routeStopIDs = await Routes.getRouteStopIDs();\n    return ROUTE_IDS.reduce(function (routeIndex, routeID, iRoute) {\n      routeIndex[routeID] = routeStopIDs[iRoute];\n      return routeIndex;\n    }, {});\n  }\n\n  static async getRoutesForStops(searchStops) {\n    const routeIndex = await Routes.getRoutesIndex();\n    var routeIDSet = new Set();\n    return searchStops.reduce(function (routesForStops, searchStop) {\n      const searchStopID = searchStop.stop_id;\n      for (var [routeID, routeStopIDs] of Object.entries(routeIndex)) {\n        if (routeIDSet.has(routeID)) {\n          continue;\n        }\n        if (routeStopIDs.includes(searchStopID)) {\n          routesForStops.push({\n            routeID,\n            stopID: searchStopID,\n            stopName: searchStop.name,\n            distance: searchStop.distance,\n          });\n          routeIDSet.add(routeID);\n        }\n      }\n      return routesForStops;\n    }, []);\n  }\n}\n","export default function Distance({ distanceKM }) {\n  if (distanceKM < 1) {\n    const distanceM = Math.round(distanceKM * 1_00, 0) * 10;\n    return <span>{distanceM.toFixed(0)}m</span>;\n  } else if (distanceKM < 10) {\n    return <span>{distanceKM.toFixed(1)}km</span>;\n  }\n  return <span>{distanceKM.toFixed(0)}km</span>;\n}\n","import Distance from \"../atoms/Distance.js\";\nexport default function ClosestStopsView({ closestStops }) {\n  return (\n    <ul>\n      {closestStops.map(function (stop, iStop) {\n        return (\n          <li key={`stop-${iStop}`}>\n            {stop.name} (<Distance distanceKM={stop.distance} />)\n          </li>\n        );\n      })}\n    </ul>\n  );\n}\n","import * as React from \"react\";\nimport Typography from \"@mui/material/Typography\";\nimport Distance from \"../atoms/Distance.js\";\n\nfunction formatDirection(routeDirection) {\n  switch (routeDirection) {\n    case \"N\":\n      return \"Northbound\";\n    case \"S\":\n      return \"Southbound\";\n    case \"E\":\n      return \"Eastbound\";\n    case \"W\":\n      return \"Westbound\";\n    default:\n      return undefined;\n  }\n}\n\nfunction getColor(routeNumber) {\n  const routeNumberPrefix = parseInt(routeNumber.substring(0, 2));\n  switch (routeNumberPrefix) {\n    case 12:\n      return \"red\";\n    case 13:\n      return \"orange\";\n    case 14:\n      return \"blue\";\n    case 15:\n      return \"brown\";\n    case 16:\n      return \"purple\";\n    case 17:\n      return \"green\";\n    default:\n      return \"gray\";\n  }\n}\n\nexport default function Route({ route }) {\n  const routeID = route.routeID;\n  const routeNumber = routeID.substring(0, 3);\n  const routeDirection = routeID.substring(4, 5);\n  const formattedDirection = formatDirection(routeDirection);\n\n  const color = getColor(routeNumber);\n\n  return (\n    <>\n      <Typography variant=\"h6\" component=\"span\" sx={{ color }}>\n        {routeNumber}\n      </Typography>\n      <Typography variant=\"caption\" component=\"span\">\n        {\" \" + formattedDirection}\n      </Typography>\n      <br />\n      <Typography variant=\"subtitle\" component=\"span\">\n        {route.stopName}\n      </Typography>\n      <br />\n      <Typography variant=\"subtitle2\" component=\"span\">\n        <Distance distanceKM={route.distance} />\n      </Typography>\n    </>\n  );\n}\n","import * as React from \"react\";\nimport List from \"@mui/material/List\";\nimport ListItemButton from \"@mui/material/ListItemButton\";\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport DirectionsBusIcon from \"@mui/icons-material/DirectionsBus\";\nimport RouteView from \"../atoms/RouteView.js\";\n\nfunction RoutesViewItem({ route }) {\n  return (\n    <ListItemButton>\n      <ListItemIcon>\n        <DirectionsBusIcon />\n      </ListItemIcon>\n      <ListItemText>\n        <RouteView route={route} />\n      </ListItemText>\n    </ListItemButton>\n  );\n}\n\nexport default function RoutesView({ routes }) {\n  return (\n    <List>\n      {routes.map(function (route, iRoute) {\n        return <RoutesViewItem key={`route-${iRoute}`} route={route} />;\n      })}\n    </List>\n  );\n}\n","const STYLE = {\n  centerCircle: { color: \"red\", stroke: null, fillOpacity: 0.25, radius: 100 },\n  stopCircle: { color: \"blue\", fillOpacity: 0.5, stroke: null, radius: 10 },\n};\n\nexport default STYLE;\n","import { Component } from \"react\";\nimport { MapContainer, TileLayer, CircleMarker } from \"react-leaflet\";\nimport STYLES from \"../../Styles.js\";\nimport \"./GeoMap.css\";\n\nconst URL_FORMAT = \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\";\n\nexport default class GeoMap extends Component {\n  render() {\n    const { center, zoom } = this.props;\n    return (\n      <MapContainer center={center} zoom={zoom} zoomControl={false}>\n        <TileLayer url={URL_FORMAT} />\n        {this.props.children}\n        <CircleMarker\n          center={center}\n          radius={STYLES.centerCircle.radius}\n          pathOptions={STYLES.centerCircle}\n        />\n      </MapContainer>\n    );\n  }\n}\n","import { CircleMarker } from \"react-leaflet\";\nimport STYLES from \"../../Styles.js\";\n\nexport default function StopCircle({ stop }) {\n  return (\n    <CircleMarker\n      center={stop.lat_lng}\n      radius={STYLES.stopCircle.radius}\n      pathOptions={STYLES.stopCircle}\n    />\n  );\n}\n","import { Component } from \"react\";\n\nimport Box from \"@mui/material/Box\";\nimport BottomNavigation from \"@mui/material/BottomNavigation\";\nimport BottomNavigationAction from \"@mui/material/BottomNavigationAction\";\nimport LocationOnIcon from \"@mui/icons-material/LocationOn\";\nimport DirectionsBusIcon from \"@mui/icons-material/DirectionsBus\";\nimport AirlineStopsIcon from \"@mui/icons-material/AirlineStops\";\nimport Paper from \"@mui/material/Paper\";\n\nimport Stops from \"../../core/Stops.js\";\nimport Routes from \"../../core/Routes.js\";\nimport ClosestStopsView from \"../../nonstate/molecules/ClosestStopsView.js\";\nimport RoutesView from \"../../nonstate/molecules/RoutesView.js\";\nimport GeoMap from \"../molecules/GeoMap.js\";\nimport StopCircle from \"../../nonstate/molecules/StopCircle.js\";\n\nconst DEFAULT_ZOOM = 18;\nconst NAVIGATION_PANES = {\n  MAP: 0,\n  ROUTES: 1,\n  STOPS: 2,\n};\nconst N_CLOSEST_STOPS_DISPLAY = 20;\n\nexport default class HomePage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      latLng: undefined,\n      closestStops: undefined,\n      isDataLoaded: false,\n      navigationPaneValue: NAVIGATION_PANES.ROUTES,\n    };\n  }\n\n  async componentDidMount() {\n    navigator.geolocation.getCurrentPosition(\n      this.onGetCurrentPosition.bind(this)\n    );\n  }\n\n  async onGetCurrentPosition(position) {\n    const latLng = [position.coords.latitude, position.coords.longitude];\n    // const latLng = [6.9172829187372065, 79.86479515647251]\n    const closestStops = await Stops.getClosestStops(latLng);\n    const closestStopsDisplay = closestStops.slice(0, N_CLOSEST_STOPS_DISPLAY);\n    const routesForStops = await Routes.getRoutesForStops(closestStopsDisplay);\n\n    this.setState({\n      latLng,\n      closestStops,\n      closestStopsDisplay,\n      routesForStops,\n      isDataLoaded: true,\n    });\n  }\n\n  onChangeBottomNavigation(e, navigationPaneValue) {\n    this.setState({ navigationPaneValue });\n  }\n\n  renderMap() {\n    const { latLng, closestStops } = this.state;\n    const [lat, lng] = latLng;\n    return (\n      <GeoMap center={[lat, lng]} zoom={DEFAULT_ZOOM} className=\"geo-map\">\n        {closestStops.map(function (stop, iStop) {\n          return <StopCircle key={`stop-circle-${iStop}`} stop={stop} />;\n        })}\n      </GeoMap>\n    );\n  }\n\n  renderRoutes() {\n    const { routesForStops } = this.state;\n    return <RoutesView routes={routesForStops} />;\n  }\n\n  renderStops() {\n    const { closestStopsDisplay } = this.state;\n    return <ClosestStopsView closestStops={closestStopsDisplay} />;\n  }\n\n  renderInner() {\n    const { navigationPaneValue } = this.state;\n\n    switch (navigationPaneValue) {\n      case NAVIGATION_PANES.MAP:\n        return this.renderMap();\n      case NAVIGATION_PANES.ROUTES:\n        return this.renderRoutes();\n      case NAVIGATION_PANES.STOPS:\n        return this.renderStops();\n      default:\n        return null;\n    }\n  }\n\n  render() {\n    const { isDataLoaded, navigationPaneValue } = this.state;\n    if (!isDataLoaded) {\n      return \"Loading...\";\n    }\n\n    return (\n      <Box>\n        {this.renderInner()}\n        <Paper\n          sx={{ position: \"fixed\", bottom: 0, left: 0, right: 0 }}\n          elevation={3}\n        >\n          <BottomNavigation\n            showLabels\n            onChange={this.onChangeBottomNavigation.bind(this)}\n            value={navigationPaneValue}\n          >\n            <BottomNavigationAction label=\"Map\" icon={<LocationOnIcon />} />\n            <BottomNavigationAction\n              label=\"Routes\"\n              icon={<DirectionsBusIcon />}\n            />\n            <BottomNavigationAction label=\"Stops\" icon={<AirlineStopsIcon />} />\n          </BottomNavigation>\n        </Paper>\n      </Box>\n    );\n  }\n}\n","import \"./App.css\";\n\nimport HomePage from \"./stateful/pages/HomePage.js\";\n\nfunction App() {\n  return <HomePage />;\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}